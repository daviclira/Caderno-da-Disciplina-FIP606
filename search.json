[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "ggplot.html",
    "href": "ggplot.html",
    "title": "O básico do pacote ggplot2",
    "section": "",
    "text": "O ggplot2 é um pacote do R baseado na gramática dos gráficos, que permite criar visualizações de dados de forma estruturada e personalizada. Ele segue a filosofia de camadas, onde cada elemento do gráfico é adicionado passo a passo.\n\n\n\nTodo gráfico no ggplot2 é construído com:\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl) \n\nif(!require(ggplot2)) install.packages(\"ggplot2\")\n\nCarregando pacotes exigidos: ggplot2\n\nlibrary(ggplot2) \n\nmilho &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"milho\")\n\nggplot(data = milho, aes(x = hybrid, y = yield)) +  \n  geom_line() +  # Camada de geometria (pontos, linhas, barras, etc.)\n  labs() +    # Rótulos (título, eixos)\n  theme()     # Ajustes estéticos (cores, fontes, fundo)\n\n\n\n\n\n\n\n\n\nDefine os dados e mapeamentos estéticos (aes).\nExemplo:\n\n\nmilho &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"milho\")\n\nggplot(milho, aes(x = hybrid, y = yield))\n\n\n\n\n\n\n\n\nDefine a forma visual dos dados:\n\ngeom_point(): Gráfico de dispersão.\n\ngeom_line(): Linhas.\n\ngeom_bar()/geom_col(): Barras.\n\ngeom_histogram(): Histograma.\n\ngeom_boxplot(): Boxplot.\n\ngeom_smooth(): Linha de tendência (regressão).\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point(color = \"blue\", size = 3) \n\n\n\n\n\n\n\n\n\nControlam como os dados são mapeados visualmente:\n\nscale_x_continuous()/scale_y_continuous(): Ajustam eixos contínuos.\n\nscale_color_manual(): Cores personalizadas.\n\nscale_fill_gradient(): Preenchimento gradiente.\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() +  \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\")) \n\n\n\n\n\n\n\n\nDivide o gráfico em subgráficos por categoria:\n\nfacet_wrap(~var): Divide em painéis.\n\nfacet_grid(var1 ~ var2): Grade 2D.\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() + \n  facet_wrap(~method) \n\n\n\n\n\n\n\n\nlabs(): Adiciona títulos e legendas.\n\ntheme_*(): Estilos pré-definidos (theme_bw(), theme_minimal()).\n\ntheme(): Personalização avançada (fontes, cores, fundo).\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() +  \n  labs(title = \"Efeitos dos híbridos na produção de milho\", x = \"Híbridos (wt)\", y = \"Produção\") +  \n  theme_minimal()  \n\n\n\n\nEssas são apenas algumas funções básicas do pacote. Há mais uma combinação enorme de possibilidades para moldar diferentes gráficos, com diversas finalidades. O ggplot2 é um pacote que apresenta a possibilidade de integração com outros pacotes. Alguns exemplos são:\n\nggsave: Salvar gráficos (“nome_do_arquivo.png”).\npatchwork: Unir gráficos para avaliação conjunta.\nggthemes: Adiciona mais possibilidades de temáticas para os gráficos."
  },
  {
    "objectID": "ggplot.html#estrutura-básica",
    "href": "ggplot.html#estrutura-básica",
    "title": "O básico do pacote ggplot2",
    "section": "",
    "text": "Todo gráfico no ggplot2 é construído com:\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl) \n\nif(!require(ggplot2)) install.packages(\"ggplot2\")\n\nCarregando pacotes exigidos: ggplot2\n\nlibrary(ggplot2) \n\nmilho &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"milho\")\n\nggplot(data = milho, aes(x = hybrid, y = yield)) +  \n  geom_line() +  # Camada de geometria (pontos, linhas, barras, etc.)\n  labs() +    # Rótulos (título, eixos)\n  theme()     # Ajustes estéticos (cores, fontes, fundo)\n\n\n\n\n\n\n\n\n\nDefine os dados e mapeamentos estéticos (aes).\nExemplo:\n\n\nmilho &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"milho\")\n\nggplot(milho, aes(x = hybrid, y = yield))\n\n\n\n\n\n\n\n\nDefine a forma visual dos dados:\n\ngeom_point(): Gráfico de dispersão.\n\ngeom_line(): Linhas.\n\ngeom_bar()/geom_col(): Barras.\n\ngeom_histogram(): Histograma.\n\ngeom_boxplot(): Boxplot.\n\ngeom_smooth(): Linha de tendência (regressão).\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point(color = \"blue\", size = 3) \n\n\n\n\n\n\n\n\n\nControlam como os dados são mapeados visualmente:\n\nscale_x_continuous()/scale_y_continuous(): Ajustam eixos contínuos.\n\nscale_color_manual(): Cores personalizadas.\n\nscale_fill_gradient(): Preenchimento gradiente.\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() +  \n  scale_color_manual(values = c(\"red\", \"green\", \"blue\")) \n\n\n\n\n\n\n\n\nDivide o gráfico em subgráficos por categoria:\n\nfacet_wrap(~var): Divide em painéis.\n\nfacet_grid(var1 ~ var2): Grade 2D.\n\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() + \n  facet_wrap(~method) \n\n\n\n\n\n\n\n\nlabs(): Adiciona títulos e legendas.\n\ntheme_*(): Estilos pré-definidos (theme_bw(), theme_minimal()).\n\ntheme(): Personalização avançada (fontes, cores, fundo).\n\nExemplo:\n\nggplot(milho, aes(x = hybrid, y = yield))+  \n  geom_point() +  \n  labs(title = \"Efeitos dos híbridos na produção de milho\", x = \"Híbridos (wt)\", y = \"Produção\") +  \n  theme_minimal()  \n\n\n\n\nEssas são apenas algumas funções básicas do pacote. Há mais uma combinação enorme de possibilidades para moldar diferentes gráficos, com diversas finalidades. O ggplot2 é um pacote que apresenta a possibilidade de integração com outros pacotes. Alguns exemplos são:\n\nggsave: Salvar gráficos (“nome_do_arquivo.png”).\npatchwork: Unir gráficos para avaliação conjunta.\nggthemes: Adiciona mais possibilidades de temáticas para os gráficos."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introdução",
    "section": "",
    "text": "R é uma linguagem de programação e ambiente de software especializado em computação estatística e gráficos. É uma linguagem de código aberto, voltada principalmente para análise estatística e visualização de dados.\n\n\n\n\nAnálise de dados experimentais\nTestes estatísticos\nCriação de gráficos profissionais\nManipulação de dados"
  },
  {
    "objectID": "intro.html#o-que-é-o-r",
    "href": "intro.html#o-que-é-o-r",
    "title": "Introdução",
    "section": "",
    "text": "R é uma linguagem de programação e ambiente de software especializado em computação estatística e gráficos. É uma linguagem de código aberto, voltada principalmente para análise estatística e visualização de dados."
  },
  {
    "objectID": "intro.html#para-que-utilizar-o-r",
    "href": "intro.html#para-que-utilizar-o-r",
    "title": "Introdução",
    "section": "",
    "text": "Análise de dados experimentais\nTestes estatísticos\nCriação de gráficos profissionais\nManipulação de dados"
  },
  {
    "objectID": "intro.html#atribuição",
    "href": "intro.html#atribuição",
    "title": "Introdução",
    "section": "Atribuição",
    "text": "Atribuição\nCom a função de atribuição, é possível facilitar o uso de dados, codificando-os com uma string\n\ndados &lt;- 1 + 1\nprint(dados)\n\n[1] 2\n\n# A função *print* funciona para colocar na tela a atribuição escolhida"
  },
  {
    "objectID": "intro.html#baixar-e-instalar-pacotes",
    "href": "intro.html#baixar-e-instalar-pacotes",
    "title": "Introdução",
    "section": "Baixar e instalar pacotes",
    "text": "Baixar e instalar pacotes\nPacotes são complementos adicionais que propiciam funções novas ao R.\nPara baixar e instalar deve-se utilizar as funções install.packages e library, da seguinte forma:\n\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)"
  },
  {
    "objectID": "intro.html#como-importar-datasets",
    "href": "intro.html#como-importar-datasets",
    "title": "Introdução",
    "section": "Como importar datasets",
    "text": "Como importar datasets\nDatasets são basicamente conjuntos de dados, eles serão a base das análises\nHá várias formas de importar datasets, seguem algumas:\n\nImportar utilizando funções básicas do R\n\ncountries &lt;- read.csv(\"countries.csv\")\n\nCom isso conseguimos ler arquivos no formato .csv\n\n\nPacotes para importação de datasets\nPacote para importar arquivos em .xlsx\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\n\ndiversos &lt;- read_excel(\"dados-diversos.xlsx\")\n\n# Selecionar uma tabela dentro do arquivo .xlsx\n\ndiversos2 &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"sensibilidade_fungicidas\")\n\nNew names:\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n\n\nPacote para importar diretamente do Google Sheets\n\nif(!require(gsheet)) install.packages(\"gsheet\")\n\nCarregando pacotes exigidos: gsheet\n\n\nWarning: package 'gsheet' was built under R version 4.3.3\n\nlibrary(gsheet)\n\ndados_nuvem &lt;- gsheet2tbl(\"docs.google.com/spreadsheets/u/1/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?usp=sharing&ouid=114387405594168347966&rtpof=true&sd=true\")\n\n# Podemos selecionar um sheet específico utilizando sua url\nsurvey &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")"
  },
  {
    "objectID": "intro.html#manipulação-de-dados",
    "href": "intro.html#manipulação-de-dados",
    "title": "Introdução",
    "section": "Manipulação de dados",
    "text": "Manipulação de dados\nApós importar os dados, podemos manipulá-los de diversas formas\nO mais básico da manipulação de dados é a função de atribuir, porém temos muitas outras ferramentas para realizarmos essa atividade.\n\nTipos de variáveis\nAs variáveis de um dataframe são separadas em tipos, o que influencia diretamente nas análises.\nOs tipos mais comuns utilizados no R são:\n\na) Numéricas\n\nArmazenam números decimais (contínuos)\nExemplo: altura &lt;- 1.75\n\n\n\nb) Inteiras\n\nArmazenam números inteiros\nExemplo: idade &lt;- 30\n\n\n\nc) Caracteres\n\nArmazenam texto (strings)\nExemplo: nome &lt;- \"João Silva\"\n\n\n\nd) Lógicas\n\nArmazenam valores TRUE (verdadeiro) ou FALSE (falso)\nExemplo: ativo &lt;- TRUE\n\n\n\ne) Fatores\n\nRepresentam variáveis categóricas (com níveis definidos)\nCrucial para análises estatísticas\nExemplo: tratamento &lt;- factor(c(\"A\", \"B\", \"A\", \"C\"))\n\nTodas as variáveis estão englobadas dentro da classificação estatística das variáveis.\nOs quatro tipos são:\n\nQuantitativas\n\n\nContínuas: podem assumir qualquer valor num intervalo (ex: peso, altura)\nDiscretas: valores inteiros (ex: número de insetos)\n\n\nQualitativas\n\n\nNominais: categorias sem ordem (ex: cor, sexo)\nOrdinais: categorias com ordem (ex: nível educacional)\n\n\n\n\nOutros tipos de variáveis utilizadas no R\n\n\nData Frames\n\nEstrutura tabular (como uma planilha)\nColunas podem ser de diferentes tipos\nExemplo: um objeto datacom colunas num (numeric) e local (character)\n\n\n\nListas\n\nColeção ordenada de objetos de qualquer tipo\nExemplo: minha_lista &lt;- list(nome = \"Ana\", idade = 25, ativo = TRUE)\n\n\n\nFormas de manipular variáveis\nPrimeiramente, deve-se identificar os tipos de variáveis presentes no dataframe\nPara isso, utilizaremos a função *glimpse*, do pacote “dplyr”\n\nif(!require(dplyr)) install.packages(\"dplyr\")\nlibrary(dplyr)\n\ndiversos &lt;- read_excel(\"dados-diversos.xlsx\")\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;dbl&gt; 19.95, 4.77, 72.11, 81.37, 25.78, 80.45, 81.69, 7.02, 11.23…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n\nCom os tipos de variáveis descritos, podemos modifica-los como bem entendermos\n\nTranformar variáveis\nPodemos transformar as variáveis de um dataframe no tipo que quisermos, com funções básicas do R\nTransformação em variáveis de caracteres\n\ndiversos$Assess &lt;- as.character(diversos$Assess)\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;chr&gt; \"19.95\", \"4.77\", \"72.11\", \"81.37\", \"25.78\", \"80.45\", \"81.69…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n# Ao utilizar o \"$\", podemos selecionar uma coluna específica do dataframe\n\nTransformação em variáveis de numéricas inteiras\n\ndiversos$Assess &lt;- as.integer(diversos$Assess)\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;int&gt; 19, 4, 72, 81, 25, 80, 81, 7, 11, 79, 34, 12, 65, 41, 84, 4…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n\nTransformação em variáveis de fator\n\ndiversos$Assess &lt;- as.factor(diversos$Assess)\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;fct&gt; 19, 4, 72, 81, 25, 80, 81, 7, 11, 79, 34, 12, 65, 41, 84, 4…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n\nTransformação em variáveis lógicas\n\ndiversos$Assess &lt;- as.logical(diversos$Assess)\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;lgl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n\nTransformação em variáveis de numéricas com decimais\n\ndiversos$Assess &lt;- as.double(diversos$Assess)\nglimpse(diversos)\n\nRows: 70\nColumns: 5\n$ Cultura    &lt;chr&gt; \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Rosa\", \"Ro…\n$ rep        &lt;dbl&gt; 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,…\n$ Assess     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ LeafDoctor &lt;dbl&gt; 31.55, 13.53, 77.59, 90.83, 24.54, 73.84, 86.78, 14.04, 16.…\n$ ImageJ     &lt;dbl&gt; 26.04, 5.16, 69.46, 82.68, 13.13, 69.90, 88.66, 6.40, 10.82…\n\n\n\n\n\nSelecionar partes de dataframes\nPara facilitar as análises, ou levar o estudo para um caminho alternativo, podemos selecionar partes de dataframes\n\nSelecionar fator de dataframe\n\n\n\n\n\n\nO que é um “pipe”?\n\n\n\nO pipe, representado pelo operador |&gt; (ou %&gt;%, em pacotes como o tidyverse), é um operador especial no R que permite encadear operações de forma mais legível e intuitiva.\nO pipe pega o resultado da expressão à esquerda e usa como primeiro argumento da função à direita. Isso permite que o fluxo de trabalho seja mais dinâmico e prático.\n\n\n\n# Banco de dados utilizado a seguir\n\nsurvey &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"survey\")\n\nsurvey |&gt; \n  group_by(residue) |&gt; \n  count()\n\n# A tibble: 3 × 2\n# Groups:   residue [3]\n  residue     n\n  &lt;chr&gt;   &lt;int&gt;\n1 corn      169\n2 soybean   281\n3 &lt;NA&gt;      216\n\n\n\n\nSelecionando fatores em conjunto\n\nsurvey |&gt; \n  group_by(state, residue) |&gt; \n  count()\n\n# A tibble: 3 × 3\n# Groups:   state, residue [3]\n  state residue     n\n  &lt;chr&gt; &lt;chr&gt;   &lt;int&gt;\n1 PR    &lt;NA&gt;      216\n2 RS    corn      169\n3 RS    soybean   281\n\n\n\n\nFiltrar dados por fatores\n\nRS &lt;- survey |&gt; \n  filter(state == \"RS\")\n\nRS\n\n# A tibble: 450 × 6\n    year state residue   inc inc_class species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;  \n 1  2011 RS    soybean     1 low       Fgra   \n 2  2011 RS    soybean     1 low       Fgra   \n 3  2011 RS    soybean     1 low       Fgra   \n 4  2011 RS    soybean     1 low       Fgra   \n 5  2011 RS    soybean     1 low       Fgra   \n 6  2011 RS    soybean     1 low       Fgra   \n 7  2011 RS    corn        1 low       Fgra   \n 8  2010 RS    soybean     2 low       Fspp   \n 9  2010 RS    corn        2 low       Fgra   \n10  2011 RS    soybean     2 low       Fgra   \n# ℹ 440 more rows\n\nPR &lt;- survey |&gt; \n  filter(state == \"PR\")\n\nPR\n\n# A tibble: 216 × 6\n    year state residue   inc inc_class species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;  \n 1  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 2  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 3  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 4  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 5  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 6  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 7  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 8  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n 9  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n10  2009 PR    &lt;NA&gt;       NA &lt;NA&gt;      Fgra   \n# ℹ 206 more rows\n\n\n\n\nCombinando os conjuntos RS e PR\n\ncombinado &lt;- rbind(RS, PR)\n\n\n\nSelecionar colunas\n\nsurvey_b &lt;- survey |&gt; \n  select(year, state, species)\n  \nsurvey_b\n\n# A tibble: 666 × 3\n    year state species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n 1  2011 RS    Fgra   \n 2  2011 RS    Fgra   \n 3  2011 RS    Fgra   \n 4  2011 RS    Fgra   \n 5  2011 RS    Fgra   \n 6  2011 RS    Fgra   \n 7  2011 RS    Fgra   \n 8  2010 RS    Fspp   \n 9  2010 RS    Fgra   \n10  2011 RS    Fgra   \n# ℹ 656 more rows\n\n\n\n\nSelecionar colunas e fatores de forma conjunta\n\n# usando select e filter juntos\n\nsurvey_b &lt;- survey |&gt; \n  select(year, state, species) |&gt; \n  filter(year == \"2009\")\n\nsurvey_b\n\n# A tibble: 265 × 3\n    year state species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;  \n 1  2009 RS    Fgra   \n 2  2009 RS    Fgra   \n 3  2009 RS    Fgra   \n 4  2009 RS    Fgra   \n 5  2009 RS    Fgra   \n 6  2009 RS    Fgra   \n 7  2009 RS    Fgra   \n 8  2009 RS    Fgra   \n 9  2009 RS    Fgra   \n10  2009 RS    Fgra   \n# ℹ 255 more rows\n\n# \"filter\" = linha, \"select\" = coluna\n\n\n\n\nCriar tabela de contingência\nPermite agrupamento em formato largo\n\n\n\n\n\n\nPacote janitor\n\n\n\nDescrição: Ferramentas para limpeza e preparação de dados.\nUso: Simplifica a limpeza de nomes de colunas, checagem de duplicatas e criação de tabelas de frequência.\n\n\n\nif(!require(janitor)) install.packages(\"janitor\")\n\nCarregando pacotes exigidos: janitor\n\n\nWarning: package 'janitor' was built under R version 4.3.3\n\n\n\nAttaching package: 'janitor'\n\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n\nlibrary(janitor)\n\nsurvey_b |&gt; \n  tabyl(state, species)\n\n state Fgra Fspp\n    PR   92   31\n    RS  133    9\n\nsurvey_b |&gt; \n  tabyl(year, species)\n\n year Fgra Fspp\n 2009  225   40\n\n\nCriar gráfico a partir de tabela\n\n\n\n\n\n\nPacote ggplot2\n\n\n\nDescrição: Cria gráficos elegantes baseados na gramática dos gráficos.\nUso: Visualizações de dados personalizadas com camadas.\n\n\n\nif(!require(ggplot2)) install.packages(\"ggplot2\")\n\nCarregando pacotes exigidos: ggplot2\n\nlibrary(ggplot2)\n\nsurvey_b |&gt; \n  group_by(year, species) |&gt; \n  count() |&gt; \n  ggplot(aes(species, n, fill = species)) +\n  geom_col() +\n  facet_wrap(~year)\n\n\n\nsurvey_b |&gt; \n  group_by(year, species) |&gt; \n  count() |&gt; \n  ggplot(aes(year, n, fill = species)) +\n  geom_bar(stat = \"identity\")\n\n\n\n\nOs gráficos podem ser modificados manualmente pelo ggplot2\n\nsurvey_b |&gt; \n  group_by(year, species) |&gt; \n  count() |&gt; \n  ggplot(aes(year, n, fill = species)) +\n  geom_col() +\n  scale_fill_manual(values = c(\"red\", \"blue\"))\n\n\n\n### scale_fill pode servir para mudanças manuais ou com base em paletas do R\n### fill = preenchimento\n### color = borda ou preenchimento\n\nO pacote ggplot2 será descrito de forma mais detalhada em capítulos posteriores\nTransformar dados da planilha para formato largo (mais prático para realziar as análises)\n\n\n\n\n\n\nPacote tidyr\n\n\n\nDescrição: Ferramentas para organização e estruturação de dados. Uso: Transforma dados entre formatos “wide” (amplo) e “long” (longo), trata valores ausentes e aninhados.\n\n\n\nif(!require(tidyr)) install.packages(\"tidyr\")\n\nCarregando pacotes exigidos: tidyr\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyr)\n\nmg&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"magnesio\")\n\nmg2 &lt;- mg |&gt;  \n  pivot_wider(names_from = trat, values_from = comp) |&gt; \n    select(-rep)\n\nglimpse(mg2)\n\nRows: 10\nColumns: 2\n$ Mg2     &lt;dbl&gt; 9.0, 12.5, 10.0, 8.0, 13.2, 11.0, 10.8, 9.5, 10.8, 10.4\n$ control &lt;dbl&gt; 13.72, 15.91, 15.70, 14.20, 15.90, 16.54, 18.00, 14.40, 16.41,…\n\nmg2\n\n# A tibble: 10 × 2\n     Mg2 control\n   &lt;dbl&gt;   &lt;dbl&gt;\n 1   9      13.7\n 2  12.5    15.9\n 3  10      15.7\n 4   8      14.2\n 5  13.2    15.9\n 6  11      16.5\n 7  10.8    18  \n 8   9.5    14.4\n 9  10.8    16.4\n10  10.4    16"
  },
  {
    "objectID": "pacs.html",
    "href": "pacs.html",
    "title": "Sugestões de Pacotes",
    "section": "",
    "text": "Sugestões de Pacotes\nEssa sessão é dedicada para listar pacotes do R criados pela comunidade e suas funções.\n\n\npacman\nDescrição: Facilita a instalação e o carregamento de outros pacotes do R.\nUso: Permite instalar e carregar múltiplos pacotes com uma única função (p_load), evitando a repetição de código.\n\n\n\ncar (Companion to Applied Regression)\nDescrição: Oferece funções para análise de regressão e modelos lineares.\nUso: Inclui testes como Anova, vif (para multicolinearidade) e transformações de variáveis.\n\n\n\nDHARMa\nDescrição: Ferramentas para diagnóstico de modelos estatísticos, especialmente GLMMs.\nUso: Gera resíduos simulados para verificar a adequação de modelos.\n\n\n\ndplyr\nDescrição: Parte do tidyverse, manipulação eficiente de dados.\nUso: Operações como filtro (filter), seleção (select), agregação (summarise) e transformação (mutate).\n\n\n\ntidytuesdayR\nDescrição: Acessa conjuntos de dados do projeto #TidyTuesday.\nUso: Praticar visualização e análise com dados reais compartilhados semanalmente.\n\n\n\nggplot2\nDescrição: Cria gráficos elegantes baseados na gramática dos gráficos.\nUso: Visualizações personalizadas com camadas.\n\n\n\nggthemes\nDescrição: Oferece temas e escalas adicionais para ggplot2.\nUso: Estilizar gráficos criados com o ggplot2.\n\n\n\nggspatial\nDescrição: Adiciona elementos espaciais a gráficos criados com o ggplot2.\nUso: Incluir escalas, setas de norte ou shapes em mapas.\n\n\n\ngsheet\nDescrição: Baixa dados diretamente do Google Sheets.\nUso: Importar planilhas compartilhadas via URL.\n\n\n\nlme4\nDescrição: Ajusta modelos lineares mistos (LMEMs/GLMEMs).\nUso: Modelos com efeitos fixos e aleatórios (lmer, glmer).\n\n\n\nlmerTest\nDescrição: Extende lme4 com testes de significância para LMEMs.\nUso: Fornece p-valores para efeitos em modelos mistos.\n\n\n\nmultcomp\nDescrição: Realiza comparações múltiplas (post-hoc).\nUso: Testes como Tukey HSD para diferenças entre grupos.\n\n\n\npatchwork\nDescrição: Combina gráficos (ggplot2) em layouts complexos.\nUso: Organizar múltiplos plots em uma única figura com operadores (+, /).\n\n\n\nplotly\nDescrição: Cria gráficos interativos.\nUso: Converter gráficos estáticos (ex.: ggplot2) em versões dinâmicas com zoom e tooltips.\n\n\n\nreadxl\nDescrição: Lê arquivos do Excel (.xlsx, .xls).\nUso: Importar dados sem depender do Java ou outras bibliotecas.\n\n\n\nrmarkdown\nDescrição: Gera relatórios dinâmicos em HTML, PDF ou Word.\nUso: Documentos reprodutíveis que combinam código, texto e resultados.\n\n\n\nrnaturalearth (+ hires e data)\nDescrição: Dados geoespaciais de mapas mundiais.\nUso: Obter shapes de países, estados, etc., para visualização.\nComplementos: “rnaturalearthhires” e “rnaturalearthdata”.\n\n\n\nrsconnect\nDescrição: Publica aplicativos Shiny ou relatórios no RStudio Connect.\nUso: Deploy de projetos diretamente do R.\n\n\n\nsandwich\nDescrição: Estimadores robustos de variância para modelos.\nUso: Ajustar erros padrão para heterocedasticidade.\n\n\n\nshiny\nDescrição: Cria aplicativos web interativos.\nUso: Desenvolver dashboards ou ferramentas com R.\n\n\n\nterra\nDescrição: Manipulação de dados raster e espaciais.\nUso: Análise de imagens, mapas de uso do solo, etc.\n\n\n\ntidyverse\nDescrição: Conjunto de pacotes para ciência de dados (inclui dplyr, ggplot2, etc.).\nUso: Abordagem coerente para importar, transformar e visualizar dados.\n\n\n\nMASS\nDescrição: Funções para estatística aplicada (criação do R).\nUso: Ajuste de modelos como LDA, regressão robusta (rlm), ou glm.nb.\n\n\n\nDT\nDescrição: Cria tabelas interativas em HTML (DataTables).\nUso: Exibir dados em aplicativos Shiny ou relatórios com filtros e paginação.\n\n\n\nsf (Simple Features)\nDescrição: Manipulação de dados geoespaciais vetoriais.\nUso: Operações com shapes (pontos, linhas, polígonos) e geometrias.\n\n\n\nleaflet\nDescrição: Cria mapas interativos baseados em JavaScript.\nUso: Visualização espacial com camadas, marcadores e popups.\n\n\n\nshinywidgets\nDescrição: Widgets adicionais para Shiny.\nUso: Melhorar UI com componentes como dropdowns avançados ou sliders.\n\n\n\nrstatix\nDescrição: Funções “tidy” para estatística descritiva e testes.\nUso: Realizar testes como Wilcoxon ou Kruskal-Wallis em pipelines (%&gt;%).\n\n\n\nkableExtra\nDescrição: Formata tabelas em HTML/LaTeX.\nUso: Personalizar tabelas em relatórios (rmarkdown) com cores, tamanhos, etc.\n\n\n\nRVAideMemoire\nDescrição: Funções auxiliares para estatística e biometria.\nUso: Testes como ANOVA com post-hoc, transformações de dados.\n\n\n\ngridExtra\nDescrição: Organiza gráficos em grids.\nUso: Combinar plots baseados no sistema grid.\n\n\n\nnortest\nDescrição: Testes de normalidade.\nUso: Verificar normalidade (ex.: Anderson-Darling, Lilliefors).\n\n\n\nmultcompView\nDescrição: Visualiza comparações múltiplas.\nUso: Criar gráficos com letras indicando grupos significativos.\n\n\n\nagricolae\nDescrição: Estatística para agricultura e experimentos.\nUso: ANOVA, testes de médias (Duncan, LSD), delineamentos experimentais.\n\n\n\nagridat\nDescrição: Conjuntos de dados agrícolas.\nUso: Exemplos para análises em agronomia ou biometria."
  },
  {
    "objectID": "post.html",
    "href": "post.html",
    "title": "Testes post-hoc",
    "section": "",
    "text": "Testes post hoc (“após o fato”) são análises estatísticas realizadas após um teste estatístico significativo (como ANOVA ou Kruskal-Wallis) para identificar quais grupos específicos diferem entre si. Eles controlam o erro tipo I (falsos positivos) quando múltiplas comparações são feitas.\n\n\n\n\nAjusta o valor-p para comparações múltiplas.\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\n\nmicelial &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"micelial\")\n\n\nanova &lt;- aov(tcm ~ especie, data = micelial)\n\nTukeyHSD(anova)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = tcm ~ especie, data = micelial)\n\n$especie\n            diff         lwr         upr     p adj\nFaus-Fasi -0.335 -0.56697358 -0.10302642 0.0022625\nFcor-Fasi -0.250 -0.48197358 -0.01802642 0.0301583\nFgra-Fasi -0.660 -0.89197358 -0.42802642 0.0000001\nFmer-Fasi -0.145 -0.37697358  0.08697358 0.3765047\nFcor-Faus  0.085 -0.14697358  0.31697358 0.8168752\nFgra-Faus -0.325 -0.55697358 -0.09302642 0.0031039\nFmer-Faus  0.190 -0.04197358  0.42197358 0.1468574\nFgra-Fcor -0.410 -0.64197358 -0.17802642 0.0002045\nFmer-Fcor  0.105 -0.12697358  0.33697358 0.6761224\nFmer-Fgra  0.515  0.28302642  0.74697358 0.0000074\n\n\n\n\n\n\n\n\nVersão não paramétrica do Tukey. O mais indicado para testes Kruskal-Wallis\n\nif(!require(rstatix)) install.packages(\"rstatix\")\n\nCarregando pacotes exigidos: rstatix\n\n\nWarning: package 'rstatix' was built under R version 4.3.3\n\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(rstatix) \nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nkuskal &lt;- kruskal.test(count ~ spray, data = insect)\n\ndunn_e &lt;- dunn_test(count ~ spray, data = insect, p.adjust.method = \"bonferroni\")\n\ndunn_e\n\n# A tibble: 15 × 9\n   .y.   group1 group2    n1    n2 statistic           p      p.adj p.adj.signif\n * &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 count A      B         12    12    0.313  0.754       1          ns          \n 2 count A      C         12    12   -4.77   0.00000181  0.0000271  ****        \n 3 count A      D         12    12   -3.12   0.00182     0.0274     *           \n 4 count A      E         12    12   -3.85   0.000118    0.00177    **          \n 5 count A      F         12    12    0.406  0.685       1          ns          \n 6 count B      C         12    12   -5.09   0.000000364 0.00000546 ****        \n 7 count B      D         12    12   -3.43   0.000603    0.00904    **          \n 8 count B      E         12    12   -4.16   0.0000314   0.000471   ***         \n 9 count B      F         12    12    0.0928 0.926       1          ns          \n10 count C      D         12    12    1.66   0.0976      1          ns          \n11 count C      E         12    12    0.924  0.356       1          ns          \n12 count C      F         12    12    5.18   0.000000222 0.00000333 ****        \n13 count D      E         12    12   -0.733  0.464       1          ns          \n14 count D      F         12    12    3.52   0.000426    0.00640    **          \n15 count E      F         12    12    4.26   0.0000208   0.000312   ***         \n\n\n\n\n\nComparações pareadas com ajuste de valor-p.\n\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nunaided &lt;- escala |&gt; \n  filter(assessment == \"Unaided\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\naided &lt;- escala |&gt; \n  filter(assessment == \"Aided1\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\npairwise.wilcox.test(unaided, aided, p.adjust.method = \"holm\")  \n\n\n    Pairwise comparisons using Wilcoxon rank sum exact test \n\ndata:  unaided and aided \n\n          0.8511072 0.8796972 0.9027708 0.9067211 0.912698 0.9148087 0.9444713\n0.8796972 1         -         -         -         -        -         -        \n0.9027708 1         1         -         -         -        -         -        \n0.9067211 1         1         1         -         -        -         -        \n0.912698  1         1         1         1         -        -         -        \n0.9148087 1         1         1         1         1        -         -        \n0.9444713 1         1         1         1         1        1         -        \n0.9504629 1         1         1         1         1        1         1        \n0.9593181 1         1         1         1         1        1         1        \n0.9598576 1         1         1         1         1        1         1        \n          0.9504629 0.9593181\n0.8796972 -         -        \n0.9027708 -         -        \n0.9067211 -         -        \n0.912698  -         -        \n0.9148087 -         -        \n0.9444713 -         -        \n0.9504629 -         -        \n0.9593181 1         -        \n0.9598576 1         1        \n\nP value adjustment method: holm"
  },
  {
    "objectID": "post.html#para-dados-paramétricos",
    "href": "post.html#para-dados-paramétricos",
    "title": "Testes post-hoc",
    "section": "",
    "text": "Ajusta o valor-p para comparações múltiplas.\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\n\nmicelial &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"micelial\")\n\n\nanova &lt;- aov(tcm ~ especie, data = micelial)\n\nTukeyHSD(anova)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = tcm ~ especie, data = micelial)\n\n$especie\n            diff         lwr         upr     p adj\nFaus-Fasi -0.335 -0.56697358 -0.10302642 0.0022625\nFcor-Fasi -0.250 -0.48197358 -0.01802642 0.0301583\nFgra-Fasi -0.660 -0.89197358 -0.42802642 0.0000001\nFmer-Fasi -0.145 -0.37697358  0.08697358 0.3765047\nFcor-Faus  0.085 -0.14697358  0.31697358 0.8168752\nFgra-Faus -0.325 -0.55697358 -0.09302642 0.0031039\nFmer-Faus  0.190 -0.04197358  0.42197358 0.1468574\nFgra-Fcor -0.410 -0.64197358 -0.17802642 0.0002045\nFmer-Fcor  0.105 -0.12697358  0.33697358 0.6761224\nFmer-Fgra  0.515  0.28302642  0.74697358 0.0000074"
  },
  {
    "objectID": "post.html#para-dados-não-paramétricos",
    "href": "post.html#para-dados-não-paramétricos",
    "title": "Testes post-hoc",
    "section": "",
    "text": "Versão não paramétrica do Tukey. O mais indicado para testes Kruskal-Wallis\n\nif(!require(rstatix)) install.packages(\"rstatix\")\n\nCarregando pacotes exigidos: rstatix\n\n\nWarning: package 'rstatix' was built under R version 4.3.3\n\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(rstatix) \nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nkuskal &lt;- kruskal.test(count ~ spray, data = insect)\n\ndunn_e &lt;- dunn_test(count ~ spray, data = insect, p.adjust.method = \"bonferroni\")\n\ndunn_e\n\n# A tibble: 15 × 9\n   .y.   group1 group2    n1    n2 statistic           p      p.adj p.adj.signif\n * &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;     &lt;dbl&gt;       &lt;dbl&gt;      &lt;dbl&gt; &lt;chr&gt;       \n 1 count A      B         12    12    0.313  0.754       1          ns          \n 2 count A      C         12    12   -4.77   0.00000181  0.0000271  ****        \n 3 count A      D         12    12   -3.12   0.00182     0.0274     *           \n 4 count A      E         12    12   -3.85   0.000118    0.00177    **          \n 5 count A      F         12    12    0.406  0.685       1          ns          \n 6 count B      C         12    12   -5.09   0.000000364 0.00000546 ****        \n 7 count B      D         12    12   -3.43   0.000603    0.00904    **          \n 8 count B      E         12    12   -4.16   0.0000314   0.000471   ***         \n 9 count B      F         12    12    0.0928 0.926       1          ns          \n10 count C      D         12    12    1.66   0.0976      1          ns          \n11 count C      E         12    12    0.924  0.356       1          ns          \n12 count C      F         12    12    5.18   0.000000222 0.00000333 ****        \n13 count D      E         12    12   -0.733  0.464       1          ns          \n14 count D      F         12    12    3.52   0.000426    0.00640    **          \n15 count E      F         12    12    4.26   0.0000208   0.000312   ***         \n\n\n\n\n\nComparações pareadas com ajuste de valor-p.\n\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nunaided &lt;- escala |&gt; \n  filter(assessment == \"Unaided\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\naided &lt;- escala |&gt; \n  filter(assessment == \"Aided1\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\npairwise.wilcox.test(unaided, aided, p.adjust.method = \"holm\")  \n\n\n    Pairwise comparisons using Wilcoxon rank sum exact test \n\ndata:  unaided and aided \n\n          0.8511072 0.8796972 0.9027708 0.9067211 0.912698 0.9148087 0.9444713\n0.8796972 1         -         -         -         -        -         -        \n0.9027708 1         1         -         -         -        -         -        \n0.9067211 1         1         1         -         -        -         -        \n0.912698  1         1         1         1         -        -         -        \n0.9148087 1         1         1         1         1        -         -        \n0.9444713 1         1         1         1         1        1         -        \n0.9504629 1         1         1         1         1        1         1        \n0.9593181 1         1         1         1         1        1         1        \n0.9598576 1         1         1         1         1        1         1        \n          0.9504629 0.9593181\n0.8796972 -         -        \n0.9027708 -         -        \n0.9067211 -         -        \n0.912698  -         -        \n0.9148087 -         -        \n0.9444713 -         -        \n0.9504629 -         -        \n0.9593181 1         -        \n0.9598576 1         1        \n\nP value adjustment method: holm"
  },
  {
    "objectID": "pressupostos.html",
    "href": "pressupostos.html",
    "title": "Testar Pressupostos Estatísticos",
    "section": "",
    "text": "Os principais pressupostos estatísticos são:\n\nNormalidade dos resíduos\nHomocedasticidade (variância constante)\nIndependência das observações\n\nAvaliar esses pressupostos é importante para escolher o teste estatístico mais adequado para descrever seus dados. Isso garante a validade dos resultados obtidos, através de uma maior precisão das conclusões obtidas e da robustez da análise.\n\n\nPara testar a normalidade dos resíduos, podemos fazer através de análise gráfica (forma visual), e através de testes próprios para isso. A união dos dois métodos é interessante para uma maior certeza do resultado.\n\n\n\n\n\n\n\n\nPacote datasets\n\n\n\nDescrição: Pacote base do R contendo conjuntos de dados clássicos para demonstração e aprendizado. Uso: Fornece exemplos prontos para prática de análise estatística, visualização e modelagem.\n\n\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nm2 &lt;- lm(count ~ spray, data = insect)\n\nhist(residuals(m2))\n\n\n\nqqnorm(residuals(m2))\n\n\n\n# Quanto mais próximos da distribuição diagonal, maior é a chance da normalidade ser presente\n\n\n\n\nExistem vários testes para analisar a normalidade dos resíduos de um modelo, um exemplo deles é o teste de Shapiro-Wilk O teste de Shapiro-Wilk assume como hipóteses estatísticas: - H0 = Dados seguem a distribuição normal - H1 = Dados não seguem a distribuição normal Ou seja, para valores p menores ou iguais ao alfa estipulado, os dados não seguem a normalidade. E, para valores p maiores que o alfa estipulado, os dados seguem a normalidade.\n\nshapiro.test(residuals(m2))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m2)\nW = 0.96006, p-value = 0.02226\n\n\nTeste para normaldiade de resíduos com o pacote DHARMa\n\n\n\n\n\n\nPacote DHARMa\n\n\n\nDescrição: Ferramentas para diagnóstico de modelos estatísticos, especialmente GLMMs.\nUso: Gera resíduos simulados para verificar a adequação de modelos.\n\n\n\nif(!require(DHARMa)) install.packages(\"DHARMa\")\n\nCarregando pacotes exigidos: DHARMa\n\n\nWarning: package 'DHARMa' was built under R version 4.3.3\n\n\nWarning in check_dep_version(): ABI version mismatch: \nlme4 was built with Matrix ABI version 1\nCurrent Matrix ABI version is 0\nPlease re-install lme4 from source or restore original 'Matrix' package\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nlibrary(DHARMa)\n\nm2\n\n\nCall:\nlm(formula = count ~ spray, data = insect)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n    14.5000       0.8333     -12.4167      -9.5833     -11.0000       2.1667  \n\nplot(simulateResiduals(m2))\n\n\n\n# Com esse comando, você pode avaliar normalidade e homocedasticidade de forma conjunta e prática\n\n\n\n\n\nPara testar a homogeneidade das variâncias, podemos fazer através de análise gráfica (forma visual), e através de testes próprios para isso. A união dos dois métodos é interessante para uma maior certeza do resultado.\n\n\n\n\nMelhor para modelos lineares\n\nm2 &lt;- lm(count ~ spray, data = insect)\nplot(m2, which = 1) \n\n\n\n\n\n\n\nMelhor para comparação entre grupos\n\nif(!require(ggplot2)) install.packages(\"ggplot2\")\n\nCarregando pacotes exigidos: ggplot2\n\nlibrary(ggplot2)\n\nggplot(insect, aes(x = spray, y = count)) +\n  geom_boxplot() +\n  labs(title = \"Variabilidade entre Grupos\")\n\n\n\n\n\n\n\n\nGeralmente, os testes de homocedasticidade tem as hipóteses estatísticas seguindo o mesmo padrão dos testes de normalidade citados As hipóteses estatísticas normalmente são: - H0 = Dados apresentam variâncias homogêneas - H1 = Dados não apresentam variâncias homogêneas\nExistem vários testes para avaliar a homogeneidade de variâncias de modelos, aqui exemplificamos dois bastante utilizados.\n\n\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\nif(!require(tidyr)) install.packages(\"tidyr\")\n\nCarregando pacotes exigidos: tidyr\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyr)\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\nmg&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"magnesio\")\n\nmg2 &lt;- mg |&gt;  \n  pivot_wider(names_from = trat, values_from = comp) |&gt; \n    select(-rep)\n\nvar.test(mg2$Mg2, mg2$control)\n\n\n    F test to compare two variances\n\ndata:  mg2$Mg2 and mg2$control\nF = 1.4781, num df = 9, denom df = 9, p-value = 0.5698\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.3671417 5.9508644\nsample estimates:\nratio of variances \n          1.478111 \n\n\n\n\n\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nbartlett.test(count ~ spray, data = insect)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  count by spray\nBartlett's K-squared = 25.96, df = 5, p-value = 9.085e-05"
  },
  {
    "objectID": "pressupostos.html#testar-a-normalidade-dos-resíduos",
    "href": "pressupostos.html#testar-a-normalidade-dos-resíduos",
    "title": "Testar Pressupostos Estatísticos",
    "section": "",
    "text": "Para testar a normalidade dos resíduos, podemos fazer através de análise gráfica (forma visual), e através de testes próprios para isso. A união dos dois métodos é interessante para uma maior certeza do resultado.\n\n\n\n\n\n\n\n\nPacote datasets\n\n\n\nDescrição: Pacote base do R contendo conjuntos de dados clássicos para demonstração e aprendizado. Uso: Fornece exemplos prontos para prática de análise estatística, visualização e modelagem.\n\n\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nm2 &lt;- lm(count ~ spray, data = insect)\n\nhist(residuals(m2))\n\n\n\nqqnorm(residuals(m2))\n\n\n\n# Quanto mais próximos da distribuição diagonal, maior é a chance da normalidade ser presente\n\n\n\n\nExistem vários testes para analisar a normalidade dos resíduos de um modelo, um exemplo deles é o teste de Shapiro-Wilk O teste de Shapiro-Wilk assume como hipóteses estatísticas: - H0 = Dados seguem a distribuição normal - H1 = Dados não seguem a distribuição normal Ou seja, para valores p menores ou iguais ao alfa estipulado, os dados não seguem a normalidade. E, para valores p maiores que o alfa estipulado, os dados seguem a normalidade.\n\nshapiro.test(residuals(m2))\n\n\n    Shapiro-Wilk normality test\n\ndata:  residuals(m2)\nW = 0.96006, p-value = 0.02226\n\n\nTeste para normaldiade de resíduos com o pacote DHARMa\n\n\n\n\n\n\nPacote DHARMa\n\n\n\nDescrição: Ferramentas para diagnóstico de modelos estatísticos, especialmente GLMMs.\nUso: Gera resíduos simulados para verificar a adequação de modelos.\n\n\n\nif(!require(DHARMa)) install.packages(\"DHARMa\")\n\nCarregando pacotes exigidos: DHARMa\n\n\nWarning: package 'DHARMa' was built under R version 4.3.3\n\n\nWarning in check_dep_version(): ABI version mismatch: \nlme4 was built with Matrix ABI version 1\nCurrent Matrix ABI version is 0\nPlease re-install lme4 from source or restore original 'Matrix' package\n\n\nThis is DHARMa 0.4.7. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')\n\nlibrary(DHARMa)\n\nm2\n\n\nCall:\nlm(formula = count ~ spray, data = insect)\n\nCoefficients:\n(Intercept)       sprayB       sprayC       sprayD       sprayE       sprayF  \n    14.5000       0.8333     -12.4167      -9.5833     -11.0000       2.1667  \n\nplot(simulateResiduals(m2))\n\n\n\n# Com esse comando, você pode avaliar normalidade e homocedasticidade de forma conjunta e prática"
  },
  {
    "objectID": "pressupostos.html#testar-a-homocedasticidade",
    "href": "pressupostos.html#testar-a-homocedasticidade",
    "title": "Testar Pressupostos Estatísticos",
    "section": "",
    "text": "Para testar a homogeneidade das variâncias, podemos fazer através de análise gráfica (forma visual), e através de testes próprios para isso. A união dos dois métodos é interessante para uma maior certeza do resultado.\n\n\n\n\nMelhor para modelos lineares\n\nm2 &lt;- lm(count ~ spray, data = insect)\nplot(m2, which = 1) \n\n\n\n\n\n\n\nMelhor para comparação entre grupos\n\nif(!require(ggplot2)) install.packages(\"ggplot2\")\n\nCarregando pacotes exigidos: ggplot2\n\nlibrary(ggplot2)\n\nggplot(insect, aes(x = spray, y = count)) +\n  geom_boxplot() +\n  labs(title = \"Variabilidade entre Grupos\")\n\n\n\n\n\n\n\n\nGeralmente, os testes de homocedasticidade tem as hipóteses estatísticas seguindo o mesmo padrão dos testes de normalidade citados As hipóteses estatísticas normalmente são: - H0 = Dados apresentam variâncias homogêneas - H1 = Dados não apresentam variâncias homogêneas\nExistem vários testes para avaliar a homogeneidade de variâncias de modelos, aqui exemplificamos dois bastante utilizados.\n\n\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\nif(!require(tidyr)) install.packages(\"tidyr\")\n\nCarregando pacotes exigidos: tidyr\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyr)\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\nmg&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"magnesio\")\n\nmg2 &lt;- mg |&gt;  \n  pivot_wider(names_from = trat, values_from = comp) |&gt; \n    select(-rep)\n\nvar.test(mg2$Mg2, mg2$control)\n\n\n    F test to compare two variances\n\ndata:  mg2$Mg2 and mg2$control\nF = 1.4781, num df = 9, denom df = 9, p-value = 0.5698\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.3671417 5.9508644\nsample estimates:\nratio of variances \n          1.478111 \n\n\n\n\n\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nbartlett.test(count ~ spray, data = insect)\n\n\n    Bartlett test of homogeneity of variances\n\ndata:  count by spray\nBartlett's K-squared = 25.96, df = 5, p-value = 9.085e-05"
  },
  {
    "objectID": "shiny.html",
    "href": "shiny.html",
    "title": "Aplicativos em Shiny",
    "section": "",
    "text": "O Shiny é um pacote do R que permite criar aplicativos web interativos diretamente do R. Com ele, é possível transformar análises estáticas em painéis dinâmicos, onde usuários podem ajustar parâmetros e visualizar resultados em tempo real.\n\n\nUm app Shiny tem duas partes principais:\n\n\nDefine a estrutura visual do app (layout, inputs e outputs). Pode ser criada com:\n- Funções básicas (fluidPage(), sidebarLayout()).\n- Componentes interativos:\n- sliderInput(): Barra deslizante para selecionar valores.\n- selectInput(): Menu suspenso.\n- numericInput(): Campo para números.\n- actionButton(): Botão de ação.\n\n\n\nContém a lógica do R que processa os inputs e gera outputs (gráficos, tabelas, textos).\n- Inputs: Valores definidos pelo usuário na UI. - Outputs: Resultados renderizados.\n\n\n\n\n\n\nif(!require(shiny)) install.packages(\"shiny\")\n\nCarregando pacotes exigidos: shiny\n\n\nWarning: package 'shiny' was built under R version 4.3.3\n\nlibrary(shiny)\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"App Shiny\"),\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"bins\", \"Número de bins:\", min = 5, max = 50, value = 30)\n    ),\n    mainPanel(\n      plotOutput(\"histograma\")\n    )\n  )\n)\n\n# Server\nserver &lt;- function(input, output) {\n  output$histograma &lt;- renderPlot({\n    hist(rnorm(1000), breaks = input$bins, col = \"skyblue\")\n  })\n}\n\n# Rodar o app\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "shiny.html#componentes-básicos",
    "href": "shiny.html#componentes-básicos",
    "title": "Aplicativos em Shiny",
    "section": "",
    "text": "Um app Shiny tem duas partes principais:\n\n\nDefine a estrutura visual do app (layout, inputs e outputs). Pode ser criada com:\n- Funções básicas (fluidPage(), sidebarLayout()).\n- Componentes interativos:\n- sliderInput(): Barra deslizante para selecionar valores.\n- selectInput(): Menu suspenso.\n- numericInput(): Campo para números.\n- actionButton(): Botão de ação.\n\n\n\nContém a lógica do R que processa os inputs e gera outputs (gráficos, tabelas, textos).\n- Inputs: Valores definidos pelo usuário na UI. - Outputs: Resultados renderizados."
  },
  {
    "objectID": "shiny.html#exemplo-básico",
    "href": "shiny.html#exemplo-básico",
    "title": "Aplicativos em Shiny",
    "section": "",
    "text": "if(!require(shiny)) install.packages(\"shiny\")\n\nCarregando pacotes exigidos: shiny\n\n\nWarning: package 'shiny' was built under R version 4.3.3\n\nlibrary(shiny)\n\n# UI\nui &lt;- fluidPage(\n  titlePanel(\"App Shiny\"),\n  sidebarLayout(\n    sidebarPanel(\n      sliderInput(\"bins\", \"Número de bins:\", min = 5, max = 50, value = 30)\n    ),\n    mainPanel(\n      plotOutput(\"histograma\")\n    )\n  )\n)\n\n# Server\nserver &lt;- function(input, output) {\n  output$histograma &lt;- renderPlot({\n    hist(rnorm(1000), breaks = input$bins, col = \"skyblue\")\n  })\n}\n\n# Rodar o app\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "testes.html",
    "href": "testes.html",
    "title": "Testes estatísticos",
    "section": "",
    "text": "Os testes estatísticos são ferramentas utilizadas para tomar decisões com base em dados, avaliando hipóteses e determinando se as diferenças ou relações observadas são estatisticamente significativas ou se podem ter ocorrido por acaso.\nPodemos utilizar uma enorme variedade de testes para analisar nossos dados. A escolha do melhor teste depende do tipo de dados a serem analisados, a distribuição dos dados, dos pressupostos atingidos ou não atingidos, entre outros fatores.\nOs testes podem ser divididos de forma geral entre paramétricos e não paramétricos.\n\n\nPressupõem que os resíduos do modelo seguem uma distribuição normal, e apresentam homogeneidade de variâncias.\n\n\nCompara médias de dois grupos.\nPode ser utilizado em vários tipos\n\n\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\nif(!require(tidyr)) install.packages(\"tidyr\")\n\nCarregando pacotes exigidos: tidyr\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyr)\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\nmg&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"magnesio\")\n\nmg2 &lt;- mg |&gt;  \n  pivot_wider(names_from = trat, values_from = comp) |&gt; \n    select(-rep)\n\n\ntmg2 &lt;- t.test(mg2$Mg2, mg2$control)\n\n\n\n\n\n\n\n\n\n\nPacote rstatix\n\n\n\nDescrição: Funções relacionadas ao grupo “tidy” para estatística descritiva e testes. Uso: Realizar testes como Wilcoxon ou Kruskal-Wallis em pipelines (%&gt;%).\n\n\n\nif(!require(rstatix)) install.packages(\"rstatix\")\n\nCarregando pacotes exigidos: rstatix\n\n\nWarning: package 'rstatix' was built under R version 4.3.3\n\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(rstatix)\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nt_test(acuracia ~ assessment, \n       data = escala, \n       paired = T)\n\n# A tibble: 1 × 8\n  .y.      group1 group2     n1    n2 statistic    df       p\n* &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;   &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 acuracia Aided1 Unaided    10    10      4.43     9 0.00166\n\n\n\n\n\n\ndiversos &lt;- read_excel(\"dados-diversos.xlsx\")\n\nteste_t &lt;- t.test(diversos$ImageJ, mu = 500)\nprint(teste_t)\n\n\n    One Sample t-test\n\ndata:  diversos$ImageJ\nt = -172.55, df = 69, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 500\n95 percent confidence interval:\n 12.82394 23.96006\nsample estimates:\nmean of x \n   18.392 \n\n\n\n\n\n\nModela a relação entre uma variável dependente (contínua) e uma ou mais variáveis independentes (contínuas).\nObjetivo: Prever ou explicar o comportamento da variável resposta. Para isso, usaremos a função “lm”, nativa do R.\n\nfungcamp&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"fungicida_campo\")\n\nlinearmodel &lt;- lm(PROD ~ FER, data = fungcamp)\nsummary(linearmodel)\n\n\nCall:\nlm(formula = PROD ~ FER, data = fungcamp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-983.83 -182.07   27.37  261.10  591.92 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  5286.09      91.66  57.672  &lt; 2e-16 ***\nFER           -49.60      11.28  -4.396 0.000127 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 363.2 on 30 degrees of freedom\nMultiple R-squared:  0.3918,    Adjusted R-squared:  0.3715 \nF-statistic: 19.32 on 1 and 30 DF,  p-value: 0.0001274\n\n# Identificar o valor dos coeficientes beta-0 e beta-1\nprint(linearmodel)\n\n\nCall:\nlm(formula = PROD ~ FER, data = fungcamp)\n\nCoefficients:\n(Intercept)          FER  \n     5286.1        -49.6  \n\n\n\n\n\nCompara médias de três ou mais grupos para verificar diferenças estatísticas.\n\nmicelial &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"micelial\")\n\nanova &lt;- aov(tcm ~ especie, data = micelial)\n\nsummary(anova)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nespecie      4 1.4696  0.3674   19.63 2.03e-07 ***\nResiduals   25 0.4679  0.0187                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(anova)\n\nCall:\n   aov(formula = tcm ~ especie, data = micelial)\n\nTerms:\n                  especie Residuals\nSum of Squares  1.4695800 0.4679167\nDeg. of Freedom         4        25\n\nResidual standard error: 0.1368089\nEstimated effects may be unbalanced\n\n\n\n\n\nCombina ANOVA e regressão linear.\nO objetivo é ajustar o efeito de variáveis contínuas (covariáveis) ao comparar grupos\n\ncurve &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"curve\")\n\nancova &lt;- aov(severity ~ Irrigation + day + Irrigation*day, data = curve)\n\nsummary(ancova)\n\n               Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nIrrigation      1 0.0006  0.0006    0.557  0.458    \nday             1 1.3360  1.3360 1151.037 &lt;2e-16 ***\nIrrigation:day  1 0.0007  0.0007    0.628  0.432    \nResiduals      56 0.0650  0.0012                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Quando a interação não for significativa, deve-se retirá-la do modelo e roda-lo novamente.\n\nancova &lt;- aov(severity ~ Irrigation + day, data = curve)\n\nsummary(ancova)\n\n            Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nIrrigation   1 0.0006  0.0006    0.561  0.457    \nday          1 1.3360  1.3360 1158.607 &lt;2e-16 ***\nResiduals   57 0.0657  0.0012                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nA ANOVA bifatorial (ou ANOVA Two-Way) é um teste estatístico que avalia o efeito de dois fatores categóricos independentes sobre uma variável contínua dependente, além de verificar se há interação entre os fatores.\n\nsensi &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"sensibilidade_fungicidas\")\n\nNew names:\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n\nmodsensi &lt;- aov(germination ~ state * dose, data = sensi)\nsummary(modsensi)\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)    \nstate         1     18      18   0.613  0.434    \ndose          5  81188   16238 548.446 &lt;2e-16 ***\nstate:dose    5    215      43   1.451  0.207    \nResiduals   228   6750      30                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nSão testes que não exigem suposições rígidas sobre a distribuição dos dados.\n\n\nANOVA não paramétrica para comparar medianas de três ou mais grupos independentes.\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nkruskal.test(count ~ spray, data = insect)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n\n\nO pacote agricolae tem teste kruskal já mostrando os grupos que diferem\n\n\n\n\n\n\nPacote agricolae\n\n\n\nDescrição: Apresenta funções estatísticas relacionadas a experimentos agrícolas.\nUso: ANOVA, testes de médias (Duncan, LSD), delineamentos experimentais.\n\n\n\nif(!require(agricolae)) install.packages(\"agricolae\")\n\nCarregando pacotes exigidos: agricolae\n\n\nWarning: package 'agricolae' was built under R version 4.3.3\n\nlibrary(agricolae)\n\nkruskal(insect$count, insect$spray, group = T, console = T)\n\n\nStudy: insect$count ~ insect$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsect$spray,  means of the ranks\n\n  insect.count  r\nA     52.16667 12\nB     54.83333 12\nC     11.45833 12\nD     25.58333 12\nE     19.33333 12\nF     55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insect$count groups\nF     55.62500      a\nB     54.83333      a\nA     52.16667      a\nD     25.58333      b\nE     19.33333     bc\nC     11.45833      c\n\n\n\n\n\nVersão não paramétrica para comparar duas amostras pareadas (dados não normais).\nVersões:\n- Wilcoxon signed-rank: Amostras dependentes.\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nunaided &lt;- escala |&gt; \n  filter(assessment == \"Unaided\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\naided &lt;- escala |&gt; \n  filter(assessment == \"Aided1\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\nwilcox.test(unaided, aided)\n\n\n    Wilcoxon rank sum exact test\n\ndata:  unaided and aided\nW = 0, p-value = 1.083e-05\nalternative hypothesis: true location shift is not equal to 0\n\n\n\nWilcoxon rank-sum (Mann-Whitney U): Amostras independentes.\n\n\nwilcox.test(unaided, aided, paired = F)\n\n\n    Wilcoxon rank sum exact test\n\ndata:  unaided and aided\nW = 0, p-value = 1.083e-05\nalternative hypothesis: true location shift is not equal to 0\n\n\n\n\n\nEstende a regressão linear para variáveis resposta não normais.\nComponentes:\n\nFamília de distribuições:\n- Gaussiana (normal): Para dados contínuos.\n- Binomial: Para proporções/binários\n- Poisson: Para contagens\n- Gamma: Para dados contínuos assimétricos\nFunção de ligação: Conecta preditores à resposta (ex.: logit para binomial).\n\nglm &lt;- glm(PROD ~ FER, data = fungcamp)\n\nsummary(glm)\n\n\nCall:\nglm(formula = PROD ~ FER, data = fungcamp)\n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  5286.09      91.66  57.672  &lt; 2e-16 ***\nFER           -49.60      11.28  -4.396 0.000127 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 131911.9)\n\n    Null deviance: 6506243  on 31  degrees of freedom\nResidual deviance: 3957358  on 30  degrees of freedom\nAIC: 472.02\n\nNumber of Fisher Scoring iterations: 2"
  },
  {
    "objectID": "testes.html#testes-paramétricos",
    "href": "testes.html#testes-paramétricos",
    "title": "Testes estatísticos",
    "section": "",
    "text": "Pressupõem que os resíduos do modelo seguem uma distribuição normal, e apresentam homogeneidade de variâncias.\n\n\nCompara médias de dois grupos.\nPode ser utilizado em vários tipos\n\n\n\nif(!require(readxl)) install.packages(\"readxl\")\n\nCarregando pacotes exigidos: readxl\n\n\nWarning: package 'readxl' was built under R version 4.3.3\n\nlibrary(readxl)\nif(!require(tidyr)) install.packages(\"tidyr\")\n\nCarregando pacotes exigidos: tidyr\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyr)\nif(!require(dplyr)) install.packages(\"dplyr\")\n\nCarregando pacotes exigidos: dplyr\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(dplyr)\n\nmg&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"magnesio\")\n\nmg2 &lt;- mg |&gt;  \n  pivot_wider(names_from = trat, values_from = comp) |&gt; \n    select(-rep)\n\n\ntmg2 &lt;- t.test(mg2$Mg2, mg2$control)\n\n\n\n\n\n\n\n\n\n\nPacote rstatix\n\n\n\nDescrição: Funções relacionadas ao grupo “tidy” para estatística descritiva e testes. Uso: Realizar testes como Wilcoxon ou Kruskal-Wallis em pipelines (%&gt;%).\n\n\n\nif(!require(rstatix)) install.packages(\"rstatix\")\n\nCarregando pacotes exigidos: rstatix\n\n\nWarning: package 'rstatix' was built under R version 4.3.3\n\n\n\nAttaching package: 'rstatix'\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nlibrary(rstatix)\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nt_test(acuracia ~ assessment, \n       data = escala, \n       paired = T)\n\n# A tibble: 1 × 8\n  .y.      group1 group2     n1    n2 statistic    df       p\n* &lt;chr&gt;    &lt;chr&gt;  &lt;chr&gt;   &lt;int&gt; &lt;int&gt;     &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;\n1 acuracia Aided1 Unaided    10    10      4.43     9 0.00166\n\n\n\n\n\n\ndiversos &lt;- read_excel(\"dados-diversos.xlsx\")\n\nteste_t &lt;- t.test(diversos$ImageJ, mu = 500)\nprint(teste_t)\n\n\n    One Sample t-test\n\ndata:  diversos$ImageJ\nt = -172.55, df = 69, p-value &lt; 2.2e-16\nalternative hypothesis: true mean is not equal to 500\n95 percent confidence interval:\n 12.82394 23.96006\nsample estimates:\nmean of x \n   18.392 \n\n\n\n\n\n\nModela a relação entre uma variável dependente (contínua) e uma ou mais variáveis independentes (contínuas).\nObjetivo: Prever ou explicar o comportamento da variável resposta. Para isso, usaremos a função “lm”, nativa do R.\n\nfungcamp&lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"fungicida_campo\")\n\nlinearmodel &lt;- lm(PROD ~ FER, data = fungcamp)\nsummary(linearmodel)\n\n\nCall:\nlm(formula = PROD ~ FER, data = fungcamp)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-983.83 -182.07   27.37  261.10  591.92 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  5286.09      91.66  57.672  &lt; 2e-16 ***\nFER           -49.60      11.28  -4.396 0.000127 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 363.2 on 30 degrees of freedom\nMultiple R-squared:  0.3918,    Adjusted R-squared:  0.3715 \nF-statistic: 19.32 on 1 and 30 DF,  p-value: 0.0001274\n\n# Identificar o valor dos coeficientes beta-0 e beta-1\nprint(linearmodel)\n\n\nCall:\nlm(formula = PROD ~ FER, data = fungcamp)\n\nCoefficients:\n(Intercept)          FER  \n     5286.1        -49.6  \n\n\n\n\n\nCompara médias de três ou mais grupos para verificar diferenças estatísticas.\n\nmicelial &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"micelial\")\n\nanova &lt;- aov(tcm ~ especie, data = micelial)\n\nsummary(anova)\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nespecie      4 1.4696  0.3674   19.63 2.03e-07 ***\nResiduals   25 0.4679  0.0187                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nprint(anova)\n\nCall:\n   aov(formula = tcm ~ especie, data = micelial)\n\nTerms:\n                  especie Residuals\nSum of Squares  1.4695800 0.4679167\nDeg. of Freedom         4        25\n\nResidual standard error: 0.1368089\nEstimated effects may be unbalanced\n\n\n\n\n\nCombina ANOVA e regressão linear.\nO objetivo é ajustar o efeito de variáveis contínuas (covariáveis) ao comparar grupos\n\ncurve &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"curve\")\n\nancova &lt;- aov(severity ~ Irrigation + day + Irrigation*day, data = curve)\n\nsummary(ancova)\n\n               Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nIrrigation      1 0.0006  0.0006    0.557  0.458    \nday             1 1.3360  1.3360 1151.037 &lt;2e-16 ***\nIrrigation:day  1 0.0007  0.0007    0.628  0.432    \nResiduals      56 0.0650  0.0012                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n# Quando a interação não for significativa, deve-se retirá-la do modelo e roda-lo novamente.\n\nancova &lt;- aov(severity ~ Irrigation + day, data = curve)\n\nsummary(ancova)\n\n            Df Sum Sq Mean Sq  F value Pr(&gt;F)    \nIrrigation   1 0.0006  0.0006    0.561  0.457    \nday          1 1.3360  1.3360 1158.607 &lt;2e-16 ***\nResiduals   57 0.0657  0.0012                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nA ANOVA bifatorial (ou ANOVA Two-Way) é um teste estatístico que avalia o efeito de dois fatores categóricos independentes sobre uma variável contínua dependente, além de verificar se há interação entre os fatores.\n\nsensi &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"sensibilidade_fungicidas\")\n\nNew names:\n• `` -&gt; `...8`\n• `` -&gt; `...9`\n\nmodsensi &lt;- aov(germination ~ state * dose, data = sensi)\nsummary(modsensi)\n\n             Df Sum Sq Mean Sq F value Pr(&gt;F)    \nstate         1     18      18   0.613  0.434    \ndose          5  81188   16238 548.446 &lt;2e-16 ***\nstate:dose    5    215      43   1.451  0.207    \nResiduals   228   6750      30                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "testes.html#testes-não-paramétricos",
    "href": "testes.html#testes-não-paramétricos",
    "title": "Testes estatísticos",
    "section": "",
    "text": "São testes que não exigem suposições rígidas sobre a distribuição dos dados.\n\n\nANOVA não paramétrica para comparar medianas de três ou mais grupos independentes.\n\nif(!require(datasets)) install.packages(\"datasets\")\nlibrary(datasets)\n\ninsect &lt;- InsectSprays\n\nkruskal.test(count ~ spray, data = insect)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n\n\nO pacote agricolae tem teste kruskal já mostrando os grupos que diferem\n\n\n\n\n\n\nPacote agricolae\n\n\n\nDescrição: Apresenta funções estatísticas relacionadas a experimentos agrícolas.\nUso: ANOVA, testes de médias (Duncan, LSD), delineamentos experimentais.\n\n\n\nif(!require(agricolae)) install.packages(\"agricolae\")\n\nCarregando pacotes exigidos: agricolae\n\n\nWarning: package 'agricolae' was built under R version 4.3.3\n\nlibrary(agricolae)\n\nkruskal(insect$count, insect$spray, group = T, console = T)\n\n\nStudy: insect$count ~ insect$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsect$spray,  means of the ranks\n\n  insect.count  r\nA     52.16667 12\nB     54.83333 12\nC     11.45833 12\nD     25.58333 12\nE     19.33333 12\nF     55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insect$count groups\nF     55.62500      a\nB     54.83333      a\nA     52.16667      a\nD     25.58333      b\nE     19.33333     bc\nC     11.45833      c\n\n\n\n\n\nVersão não paramétrica para comparar duas amostras pareadas (dados não normais).\nVersões:\n- Wilcoxon signed-rank: Amostras dependentes.\n\nescala &lt;- read_excel(\"dados-diversos.xlsx\",\n                       sheet = \"escala\")\n\nunaided &lt;- escala |&gt; \n  filter(assessment == \"Unaided\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\naided &lt;- escala |&gt; \n  filter(assessment == \"Aided1\") |&gt; \n  select(acuracia) |&gt; \n  pull()\n\nwilcox.test(unaided, aided)\n\n\n    Wilcoxon rank sum exact test\n\ndata:  unaided and aided\nW = 0, p-value = 1.083e-05\nalternative hypothesis: true location shift is not equal to 0\n\n\n\nWilcoxon rank-sum (Mann-Whitney U): Amostras independentes.\n\n\nwilcox.test(unaided, aided, paired = F)\n\n\n    Wilcoxon rank sum exact test\n\ndata:  unaided and aided\nW = 0, p-value = 1.083e-05\nalternative hypothesis: true location shift is not equal to 0\n\n\n\n\n\nEstende a regressão linear para variáveis resposta não normais.\nComponentes:\n\nFamília de distribuições:\n- Gaussiana (normal): Para dados contínuos.\n- Binomial: Para proporções/binários\n- Poisson: Para contagens\n- Gamma: Para dados contínuos assimétricos\nFunção de ligação: Conecta preditores à resposta (ex.: logit para binomial).\n\nglm &lt;- glm(PROD ~ FER, data = fungcamp)\n\nsummary(glm)\n\n\nCall:\nglm(formula = PROD ~ FER, data = fungcamp)\n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  5286.09      91.66  57.672  &lt; 2e-16 ***\nFER           -49.60      11.28  -4.396 0.000127 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for gaussian family taken to be 131911.9)\n\n    Null deviance: 6506243  on 31  degrees of freedom\nResidual deviance: 3957358  on 30  degrees of freedom\nAIC: 472.02\n\nNumber of Fisher Scoring iterations: 2"
  }
]